{"version":3,"sources":["js/components/Label/Label.jsx","js/components/Note/Note.jsx","js/components/AllNotes/AllNotes.jsx","js/components/EditNote/EditNote.jsx","js/components/CurrentView/CurrentView.jsx","js/components/Labels/Labels.jsx","js/components/NewNote/NewNote.jsx","js/components/PinnedNotes/PinnedNotes.jsx","js/components/Search/Search.jsx","js/db/test-notes.js","js/helpers/search.js","js/helpers/get-labels.js","js/helpers/filter-by-labels.js","js/helpers/current-view.js","js/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["Label","_ref","_ref$text","text","_ref$clickHandler","clickHandler","fn","_ref$clickable","clickable","_ref$active","active","react_default","a","createElement","onClick","console","log","concat","className","Note","title","body","_ref$labels","labels","_ref$pinned","pinned","id","_ref$deleteHandler","deleteHandler","_ref$editButtonClickH","editButtonClickHandler","_ref$togglePinClickHa","togglePinClickHandler","length","map","label","index","components_Label_Label","key","type","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","data-target","AllNotes","_ref$notes","notes","note","components_Note_Note","Object","assign","EditNote","state","UNSAFE_componentWillReceiveProps","newProps","_this","setState","currentlyEditedNote","undefined","join","_this2","this","tabIndex","role","data-dismiss","aria-label","aria-hidden","htmlFor","name","value","onChange","event","currentTarget","cols","rows","props","editHandler","split","Component","defaultProps","CurrentView","_ref$currentView","currentView","Labels","_ref$labelClickHandle","labelClickHandler","_ref$labelsToShow","labelsToShow","indexOf","NewNote","_title","_body","_labels","_ref$submitHandler","submitHandler","ref","input","textarea","toConsumableArray","PinnedNotes","Search","_query","_scope","placeholder","preventDefault","select","uuidv4","require","createTestNote","testNotes","search","query","scope","filter","toLowerCase","getLabels","flat","reduce","alreadyFoundLabels","currentLabel","filterByLabels","some","createCurrentView","searchParams","arguments","message","Main","setSearchParams","handleTheLabelCLick","filterBySearchParams","createNewNote","deleteNote","idToDelete","setTheEditedNote","editedNoteId","find","editNote","idToEdit","objectSpread","togglePin","idToToggle","notesToRender","labelsToRender","components_Search_Search","components_CurrentView_CurrentView","components_PinnedNotes_PinnedNotes","components_AllNotes_AllNotes","components_Labels_Labels","components_NewNote_NewNote","components_EditNote_EditNote","App","js_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f2b31bd5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Label = ({\r\n  text = \"\",\r\n  clickHandler = fn => fn,\r\n  clickable = false,\r\n  active = false\r\n}) => (\r\n  <a\r\n    onClick={() => {\r\n      console.log(`Clicked label: ${text}`);\r\n      clickHandler(text);\r\n    }}\r\n    className={`badge ${\r\n      active ? \"badge-success\" : \"badge-secondary\"\r\n    } mr-1 text-white ${clickable ? \"clickable\" : \"\"}`}\r\n  >\r\n    {text}\r\n  </a>\r\n);\r\n\r\nLabel.propTypes = {\r\n  text: PropTypes.string,\r\n  clickHandler: PropTypes.func,\r\n  clickable: PropTypes.bool,\r\n  active: PropTypes.bool\r\n};\r\n\r\nexport default Label;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Label from \"../Label/Label\";\r\n\r\nconst Note = ({\r\n  title,\r\n  body,\r\n  labels = [],\r\n  pinned = false,\r\n  id,\r\n  deleteHandler = fn => fn,\r\n  editButtonClickHandler = fn => fn,\r\n  togglePinClickHandler = fn => fn\r\n}) => (\r\n  <article className=\"card\">\r\n    <div className=\"card-body\">\r\n      {title ? <h3 className=\"card-title\">{title}</h3> : null}\r\n\r\n      {body ? <p className=\"card-text\">{body}</p> : null}\r\n    </div>\r\n\r\n    <div className=\"card-footer\">\r\n      {labels.length > 0 ? (\r\n        <div className=\"row px-2\">\r\n          {labels.map((label, index) => (\r\n            <Label key={index} text={label} />\r\n          ))}\r\n        </div>\r\n      ) : null}\r\n\r\n      {labels.length > 0 ? <hr /> : null}\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-auto\">\r\n          <div className=\"dropdown\">\r\n            <button\r\n              className=\"btn btn-primary dropdown-toggle\"\r\n              type=\"button\"\r\n              id=\"actions\"\r\n              data-toggle=\"dropdown\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              Action\r\n            </button>\r\n            <div className=\"dropdown-menu\" aria-labelledby=\"actions\">\r\n              <button\r\n                className=\"dropdown-item\"\r\n                data-toggle=\"modal\"\r\n                data-target=\"#modal-edit-note\"\r\n                onClick={() => editButtonClickHandler(id)}\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                className=\"dropdown-item\"\r\n                onClick={() => togglePinClickHandler(id)}\r\n              >\r\n                {pinned ? \"Unpin\" : \"Add to pinned\"}\r\n              </button>\r\n              <button\r\n                className=\"dropdown-item\"\r\n                onClick={() => deleteHandler(id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </article>\r\n);\r\n\r\nNote.propTypes = {\r\n  title: PropTypes.string,\r\n  body: PropTypes.string,\r\n  labels: PropTypes.arrayOf(PropTypes.string),\r\n  deleteHandler: PropTypes.func,\r\n  id: PropTypes.string,\r\n  editButtonClickHandler: PropTypes.func,\r\n  togglePinClickHandler: PropTypes.func\r\n};\r\n\r\nexport default Note;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Note from \"../Note/Note\";\r\n\r\nconst AllNotes = ({\r\n  notes = [],\r\n  deleteHandler = fn => fn,\r\n  editButtonClickHandler = fn => fn,\r\n  togglePinClickHandler = fn => fn\r\n}) => (\r\n  <section className=\"card mt-4\">\r\n    <div className=\"card-body\">\r\n      <h2 className=\"card-title\">\r\n        <i className=\"fas fa-globe-americas\" /> All notes\r\n      </h2>\r\n\r\n      {notes.length > 0 ? (\r\n        <div className=\"row\">\r\n          {notes.map((note, index) => (\r\n            <div key={index} className=\"col-12 col-lg-6 mt-3\">\r\n              <Note\r\n                {...note}\r\n                deleteHandler={deleteHandler}\r\n                editButtonClickHandler={editButtonClickHandler}\r\n                togglePinClickHandler={togglePinClickHandler}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  </section>\r\n);\r\n\r\nAllNotes.propTypes = {\r\n  notes: PropTypes.array,\r\n  deleteHandler: PropTypes.func,\r\n  editButtonClickHandler: PropTypes.func,\r\n  togglePinClickHandler: PropTypes.func\r\n};\r\n\r\nexport default AllNotes;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass EditNote extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\",\r\n    labels: \"\"\r\n  };\r\n\r\n  static propTypes = {\r\n    currentlyEditedNote: PropTypes.object,\r\n    editHandler: PropTypes.func\r\n  };\r\n\r\n  static defaultProps = {\r\n    currentlyEditedNote: {\r\n      id: \"\",\r\n      title: \"\",\r\n      body: \"\",\r\n      labels: []\r\n    },\r\n    editHandler: fn => fn\r\n  };\r\n\r\n  UNSAFE_componentWillReceiveProps = newProps =>\r\n    this.setState({\r\n      title: newProps.currentlyEditedNote.title,\r\n      body: newProps.currentlyEditedNote.body,\r\n      labels:\r\n        newProps.currentlyEditedNote.labels !== undefined\r\n          ? newProps.currentlyEditedNote.labels.join(\", \")\r\n          : \"\"\r\n    });\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" id=\"modal-edit-note\">\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\">Note editing</h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"note-title\">Note title</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"note-title\"\r\n                    id=\"note-title\"\r\n                    className=\"form-control\"\r\n                    value={this.state.title}\r\n                    onChange={event =>\r\n                      this.setState({\r\n                        title: event.currentTarget.value\r\n                      })\r\n                    }\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"note-body\">Note body</label>\r\n                  <textarea\r\n                    name=\"note-body\"\r\n                    id=\"note-body\"\r\n                    cols=\"30\"\r\n                    rows=\"10\"\r\n                    className=\"form-control\"\r\n                    value={this.state.body}\r\n                    onChange={event =>\r\n                      this.setState({\r\n                        body: event.currentTarget.value\r\n                      })\r\n                    }\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"labels\">Labels</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"labels\"\r\n                    id=\"labels\"\r\n                    className=\"form-control\"\r\n                    value={this.state.labels}\r\n                    onChange={event =>\r\n                      this.setState({\r\n                        labels: event.currentTarget.value\r\n                      })\r\n                    }\r\n                  />\r\n                  <small className=\"form-text\">\r\n                    Multiple labels should be divided by comma\r\n                  </small>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div className=\"modal-footer d-flex justify-content-between\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n                data-dismiss=\"modal\"\r\n              >\r\n                Discard\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-success\"\r\n                data-dismiss=\"modal\"\r\n                onClick={() =>\r\n                  this.props.editHandler(\r\n                    this.props.currentlyEditedNote.id,\r\n                    this.state.title,\r\n                    this.state.body,\r\n                    this.state.labels.split(\", \")\r\n                  )\r\n                }\r\n              >\r\n                Save\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditNote;\r\n","import React from \"react\";\r\n\r\nconst CurrentView = ({ currentView = \"All notes\" }) => {\r\n  return <p className=\"lead\">Currently viewing: {currentView}</p>;\r\n};\r\n\r\nexport default CurrentView;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Label from \"../Label/Label\";\r\n\r\nconst Labels = ({\r\n  labels = [],\r\n  labelClickHandler = fn => fn,\r\n  labelsToShow = []\r\n}) => (\r\n  <section className=\"card mt-4\">\r\n    <div className=\"card-body\">\r\n      <h2 className=\"card-title\">\r\n        <i className=\"fas fa-tag\" /> Labels\r\n      </h2>\r\n\r\n      {labels.map(label => (\r\n        <Label\r\n          key={label}\r\n          text={label}\r\n          clickHandler={labelClickHandler}\r\n          clickable={true}\r\n          active={labelsToShow.indexOf(label) !== -1}\r\n        />\r\n      ))}\r\n    </div>\r\n  </section>\r\n);\r\n\r\nLabels.propTypes = {\r\n  labels: PropTypes.array,\r\n  labelClickHandler: PropTypes.func,\r\n  labelsToShow: PropTypes.array\r\n};\r\n\r\nexport default Labels;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// import NoteEditor from \"../NoteEditor/NoteEditor\";\r\n\r\nconst NewNote = ({ submitHandler = fn => fn }) => {\r\n  let _title, _body, _labels;\r\n\r\n  return (\r\n    <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" id=\"modal-new-note\">\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">New note creation</h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"note-title\">Note title</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"note-title\"\r\n                  id=\"note-title\"\r\n                  className=\"form-control\"\r\n                  ref={input => (_title = input)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"note-body\">Note body</label>\r\n                <textarea\r\n                  name=\"note-body\"\r\n                  id=\"note-body\"\r\n                  cols=\"30\"\r\n                  rows=\"10\"\r\n                  className=\"form-control\"\r\n                  ref={textarea => (_body = textarea)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"labels\">Labels</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"labels\"\r\n                  id=\"labels\"\r\n                  className=\"form-control\"\r\n                  ref={input => (_labels = input)}\r\n                />\r\n                <small className=\"form-text\">\r\n                  Multiple labels should be divided by comma\r\n                </small>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"modal-footer d-flex justify-content-between\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              data-dismiss=\"modal\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success\"\r\n              data-dismiss=\"modal\"\r\n              onClick={() => {\r\n                submitHandler(_title.value, _body.value, [\r\n                  ..._labels.value.split(\", \")\r\n                ]);\r\n                _title.value = \"\";\r\n                _body.value = \"\";\r\n                _labels.value = \"\";\r\n              }}\r\n            >\r\n              Create\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nNewNote.propTypes = {\r\n  submitHandler: PropTypes.func\r\n};\r\n\r\nexport default NewNote;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Note from \"../Note/Note\";\r\n\r\nconst PinnedNotes = ({\r\n  notes = [],\r\n  deleteHandler = fn => fn,\r\n  editButtonClickHandler = fn => fn,\r\n  togglePinClickHandler = fn => fn\r\n}) => (\r\n  <section className=\"card\">\r\n    <div className=\"card-body\">\r\n      <h2 className=\"card-title\">\r\n        <i className=\"fas fa-thumbtack\" /> Pinned notes\r\n      </h2>\r\n\r\n      {notes.length > 0 ? (\r\n        <div className=\"row\">\r\n          {notes.map((note, index) => (\r\n            <div key={index} className=\"col-12 col-lg-6 mt-3\">\r\n              <Note\r\n                {...note}\r\n                deleteHandler={deleteHandler}\r\n                editButtonClickHandler={editButtonClickHandler}\r\n                togglePinClickHandler={togglePinClickHandler}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  </section>\r\n);\r\n\r\nPinnedNotes.propTypes = {\r\n  notes: PropTypes.array,\r\n  deleteHandler: PropTypes.func,\r\n  editButtonClickHandler: PropTypes.func,\r\n  togglePinClickHandler: PropTypes.func\r\n};\r\n\r\nexport default PinnedNotes;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Search = ({ submitHandler = fn => fn }) => {\r\n  let _query, _scope;\r\n\r\n  return (\r\n    <form className=\"row justify-content-end mt-3\">\r\n      <div className=\"col-8 col-md-auto\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"search-term\"\r\n          id=\"search-term\"\r\n          placeholder={`E.g. 'Meeting with John'`}\r\n          ref={input => (_query = input)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"col-4 col-md-auto\">\r\n        <input\r\n          type=\"submit\"\r\n          className=\"form-control btn btn-primary\"\r\n          value=\"Search\"\r\n          onClick={event => {\r\n            event.preventDefault();\r\n            submitHandler(_query.value, _scope.value);\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"col-auto d-flex align-items-center mt-1 mt-md-0\">\r\n        <span>in</span>\r\n      </div>\r\n\r\n      <div className=\"col-auto mt-1 mt-md-0\">\r\n        <select\r\n          className=\"form-control\"\r\n          name=\"search-category\"\r\n          id=\"search-category\"\r\n          ref={select => (_scope = select)}\r\n        >\r\n          <option value=\"body\">body</option>\r\n          <option value=\"title\">title</option>\r\n          <option value=\"both\">both</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nSearch.propTypes = {\r\n  submitHandler: PropTypes.func\r\n};\r\n\r\nexport default Search;\r\n","const uuidv4 = require(\"uuid/v4\");\r\n\r\nconst createTestNote = (title, body, labels, pinned) => {\r\n  return {\r\n    title,\r\n    body,\r\n    labels,\r\n    id: uuidv4(),\r\n    pinned\r\n  };\r\n};\r\n\r\nconst testNote1 = createTestNote(\r\n  \"Meeting with Peter\",\r\n  `The meeting was fast. Incredibly fast and short. I didn't even have time to write any notes from it.`,\r\n  [\"meeting\", \"time\", \"speed\"],\r\n  true\r\n);\r\n\r\nconst testNote2 = createTestNote(\r\n  \"Baked Salmon\",\r\n  ` It doesn't get much easier than this Easy 5 Ingredient Baked Salmon with a garlic, lemon, and dill butter sauce. All it takes is 5 ingredients and 20 minutes of your time. So simple, so flavorful!\r\n  Yield: 4 Servings\r\n  Calories: 376 kcal\r\n  Ingredients\r\n  \r\n      1 salmon filet\r\n      1/2 cup salted butter melted\r\n      4 tablespoons fresh lemon juice\r\n      8 garlic cloves crushed\r\n      2 tablespoons finely chopped fresh dill\r\n  \r\n  US Customary - Metric\r\n  Instructions\r\n  \r\n      Preheat oven to 375 degrees. Line a 4 sided baking sheet with aluminum foil. Place the salmon in the middle of the foil.\r\n      In a glass measuring cup, combine melted butter, lemon juice, garlic, and dill. Whisk together.\r\n      Pour butter mixture directly over salmon. Pull the sides and ends of the aluminum foil up and pinch together, covering the salmon completely.\r\n      Bake in the preheated oven for 15-20 minutes, or until the salmon flakes easily with a fork.`,\r\n  [\"recipe\", \"baking\", \"salmon\"],\r\n  false\r\n);\r\n\r\nconst testNote3 = createTestNote(\r\n  \"Meeting with Mom\",\r\n  `- buy flowers\r\n  - prepare the speech\r\n  - dress a suit`,\r\n  [\"meeting\", \"mom\", \"scary\", \"love\"],\r\n  false\r\n);\r\n\r\nconst testNote4 = createTestNote(\r\n  \"Chocolate Cookies\",\r\n  `Preheat oven to 350 degrees F (175 degrees C).\r\n  In a large bowl, cream together margarine and sugar until smooth. Beat in eggs one at a time, then stir in the vanilla. Combine flour, cocoa, baking soda, and salt; stir into the creamed mixture until just blended. Mix in walnuts. Drop by spoonfuls onto ungreased cookie sheets.\r\n  Bake for 8 to 10 minutes in the preheated oven. Cool for a couple of minutes on the cookie sheet before transferring to wire racks to cool completely.`,\r\n  [\"recipe\", \"baking\", \"cookies\", \"chocolate\"],\r\n  true\r\n);\r\n\r\nconst testNotes = [testNote1, testNote2, testNote3, testNote4];\r\n\r\nexport default testNotes;\r\n","/**\r\n * This function will handle the filtering of the passed-in notes array.\r\n * @param {Array} notes The array of all the notes in the app's store.\r\n * @param {String} query The search query to apply.\r\n * @param {String} scope The scope where the search query should be applied to.\r\n */\r\nconst search = (notes, query, scope) => {\r\n  switch (scope) {\r\n    case \"body\":\r\n      return notes.filter(note =>\r\n        note.body.toLowerCase().indexOf(query.toLowerCase()) !== -1\r\n          ? true\r\n          : false\r\n      );\r\n    case \"title\":\r\n      return notes.filter(note =>\r\n        note.title.toLowerCase().indexOf(query.toLowerCase()) !== -1\r\n          ? true\r\n          : false\r\n      );\r\n    case \"both\":\r\n      return notes.filter(note =>\r\n        (note.body.toLowerCase().indexOf(query) !== -1 ||\r\n          note.title.toLowerCase().indexOf(query)) !== -1\r\n          ? true\r\n          : false\r\n      );\r\n    default:\r\n      return notes;\r\n  }\r\n};\r\n\r\nexport default search;\r\n","/**\r\n * This function will return the array of strings containing unique labels.\r\n * @param {Array} notes Array of notes.\r\n */\r\nconst getLabels = notes => {\r\n  const allLabels = notes.map(note => note.labels).flat();\r\n\r\n  const uniqueLabels = allLabels.reduce((alreadyFoundLabels, currentLabel) => {\r\n    return alreadyFoundLabels.indexOf(currentLabel) === -1\r\n      ? [...alreadyFoundLabels, currentLabel]\r\n      : alreadyFoundLabels;\r\n  }, []);\r\n\r\n  return uniqueLabels;\r\n};\r\n\r\nexport default getLabels;\r\n","/**\r\n * This function takes the array of app's notes and the array of labels. It will return the filtered array of notes, based on the given labels.\r\n * @param {Array} notes The array of all the app's notes.\r\n * @param {String[]} labels The array of labels.\r\n */\r\nconst filterByLabels = (notes, labelsToShow) => {\r\n  //  This filter() implementation will return only these notes instances that contain at least one label from the specifies 'labels' array.\r\n  return notes.filter(note =>\r\n    // This some() implementation will check if the note contains at least one of the specified labels. It will store their quantity in the array and return its length.\r\n    note.labels.some(label => labelsToShow.indexOf(label) !== -1)\r\n  );\r\n};\r\n\r\nexport default filterByLabels;\r\n","/**\r\n * This function will return the modeled string informing the User of the currently selected filters.\r\n * @param {Object} searchParams The object containing the current search parameters.\r\n * @param {String[]} labels The array of currently selected labels.\r\n */\r\nconst createCurrentView = (\r\n  searchParams = { query: \"\", scope: \"\" },\r\n  labels = []\r\n) => {\r\n  let message = \"\";\r\n\r\n  if (searchParams.query === \"\" && labels.length === 0) {\r\n    message = \"All notes\";\r\n  } else {\r\n    if (searchParams.query !== \"\") {\r\n      message = `Messages with the '${searchParams.query}' in `;\r\n      switch (searchParams.scope) {\r\n        case \"title\":\r\n          message += \"the title\";\r\n          break;\r\n        case \"body\":\r\n          message += \"the message body\";\r\n          break;\r\n        case \"both\":\r\n          message += \"the title or the message body\";\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      if (labels.length !== 0) {\r\n        message += ` and with the labels: ${labels.join(\", \")}`;\r\n      }\r\n    } else if (labels.length !== 0) {\r\n      message = `Messages with the labels: ${labels.join(\", \")}`;\r\n    }\r\n  }\r\n\r\n  return message;\r\n};\r\n\r\nexport default createCurrentView;\r\n","import React, { Component } from \"react\";\r\n\r\n// JSX components\r\nimport AllNotes from \"./components/AllNotes/AllNotes\";\r\nimport EditNote from \"./components/EditNote/EditNote\";\r\nimport CurrentView from \"./components/CurrentView/CurrentView\";\r\nimport Labels from \"./components/Labels/Labels\";\r\nimport NewNote from \"./components/NewNote/NewNote\";\r\nimport PinnedNotes from \"./components/PinnedNotes/PinnedNotes\";\r\nimport Search from \"./components/Search/Search\";\r\n\r\n// Database\r\nimport testNotes from \"./db/test-notes\";\r\n\r\n// Reducers\r\nimport search from \"./helpers/search\";\r\nimport getLabels from \"./helpers/get-labels\";\r\nimport filterByLabels from \"./helpers/filter-by-labels\";\r\nimport createCurrentView from \"./helpers/current-view\";\r\n\r\nconst uuidv4 = require(\"uuid/v4\");\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    notes: testNotes,\r\n    searchParams: { query: \"\", scope: \"\" },\r\n    labelsToShow: [],\r\n    currentlyEditedNote: {}\r\n  };\r\n\r\n  /**\r\n   * This function will set the search parameters which will be further applied when filtering the notes.\r\n   * @param {String} query The search query to apply.\r\n   * @param {String} scope The scope where the search query should be applied to.\r\n   */\r\n  setSearchParams = (query, scope) => {\r\n    this.setState({\r\n      searchParams: {\r\n        query,\r\n        scope\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * This function will add or remove the clicked label to or from the labelsToShow array.\r\n   * @param {String} label\r\n   */\r\n  handleTheLabelCLick = label => {\r\n    if (this.state.labelsToShow.indexOf(label) === -1) {\r\n      this.setState({\r\n        labelsToShow: [...this.state.labelsToShow, label]\r\n      });\r\n    } else {\r\n      this.setState({\r\n        labelsToShow: this.state.labelsToShow.filter(\r\n          currentLabel => currentLabel !== label\r\n        )\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This function returns the notes array based on the currently selected search parameters.\r\n   */\r\n  filterBySearchParams = () => {\r\n    return this.state.searchParams.query !== \"\"\r\n      ? search(\r\n          this.state.notes,\r\n          this.state.searchParams.query,\r\n          this.state.searchParams.scope\r\n        )\r\n      : this.state.notes;\r\n  };\r\n\r\n  /**\r\n   * This function will add a new note to the notes array.\r\n   * @param {String} title\r\n   * @param {String} body\r\n   * @param {String[]} labels\r\n   */\r\n  createNewNote = (title, body, labels) => {\r\n    this.setState({\r\n      notes: [\r\n        ...this.state.notes,\r\n        {\r\n          title,\r\n          body,\r\n          labels,\r\n          id: uuidv4()\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  /**\r\n   * This function will delete note of the given ID.\r\n   * @param {String} idToDelete\r\n   */\r\n  deleteNote = idToDelete => {\r\n    this.setState({\r\n      notes: this.state.notes.filter(note => note.id !== idToDelete)\r\n    });\r\n  };\r\n\r\n  /**\r\n   * This function will change the actively edited note. This will allow the population of the EditNote's form with the edited note details.\r\n   * @param {String} editedNoteId\r\n   */\r\n  setTheEditedNote = editedNoteId => {\r\n    this.setState({\r\n      currentlyEditedNote: this.state.notes.find(\r\n        note => note.id === editedNoteId\r\n      )\r\n    });\r\n  };\r\n\r\n  /**\r\n   * This function will perform the edition of the note with the given ID.\r\n   * @param {String} idToEdit\r\n   * @param {String} title\r\n   * @param {String} body\r\n   * @param {String[]} labels\r\n   */\r\n  editNote = (idToEdit, title, body, labels) => {\r\n    this.setState({\r\n      notes: this.state.notes.map(note => {\r\n        if (note.id === idToEdit) {\r\n          return {\r\n            ...note,\r\n            title,\r\n            body,\r\n            labels\r\n          };\r\n        } else {\r\n          return note;\r\n        }\r\n      })\r\n    });\r\n  };\r\n\r\n  /**\r\n   * This function will toggle the 'pinned' attribute of the note with the given ID.\r\n   * @param {String} idToToggle\r\n   */\r\n  togglePin = idToToggle =>\r\n    this.setState({\r\n      notes: this.state.notes.map(note =>\r\n        note.id === idToToggle ? { ...note, pinned: !note.pinned } : note\r\n      )\r\n    });\r\n\r\n  render() {\r\n    const notesToRender =\r\n      this.state.labelsToShow.length > 0\r\n        ? filterByLabels(this.filterBySearchParams(), this.state.labelsToShow)\r\n        : this.filterBySearchParams();\r\n\r\n    const labelsToRender = getLabels(this.state.notes);\r\n\r\n    return (\r\n      <main className=\"container\">\r\n        {/* Top row */}\r\n        <div className=\"row justify-content-between\">\r\n          <div className=\"col-12 col-lg-7 order-lg-2\">\r\n            <Search submitHandler={this.setSearchParams} />\r\n          </div>\r\n          <div className=\"col-12 col-lg-5 order-lg-1\">\r\n            <h1 className=\"display-1\">Notes</h1>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <CurrentView\r\n              currentView={createCurrentView(\r\n                this.state.searchParams,\r\n                this.state.labelsToShow\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Pinned notes */}\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <PinnedNotes\r\n              notes={notesToRender.filter(note => note.pinned)}\r\n              deleteHandler={this.deleteNote}\r\n              editButtonClickHandler={this.setTheEditedNote}\r\n              togglePinClickHandler={this.togglePin}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* All notes */}\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <AllNotes\r\n              notes={notesToRender}\r\n              deleteHandler={this.deleteNote}\r\n              editButtonClickHandler={this.setTheEditedNote}\r\n              togglePinClickHandler={this.togglePin}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Labels */}\r\n        <div className=\"row mb-5\">\r\n          <div className=\"col\">\r\n            <Labels\r\n              labels={labelsToRender}\r\n              labelClickHandler={this.handleTheLabelCLick}\r\n              labelsToShow={this.state.labelsToShow}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Floating new note (+) button */}\r\n        <button\r\n          className=\"btn btn-lg btn-primary rounded-circle shadow mr-5 mb-5 floating-button\"\r\n          data-toggle=\"modal\"\r\n          data-target=\"#modal-new-note\"\r\n        >\r\n          <i className=\"fas fa-plus\" />\r\n        </button>\r\n\r\n        <NewNote submitHandler={this.createNewNote} />\r\n        <EditNote\r\n          editHandler={this.editNote}\r\n          currentlyEditedNote={this.state.currentlyEditedNote}\r\n        />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./App.scss\";\r\nimport Main from \"./js/Main\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Main />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// eslint-disable-next-line\r\nimport $ from \"jquery\";\r\n// eslint-disable-next-line\r\nimport Popper from \"popper.js\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}